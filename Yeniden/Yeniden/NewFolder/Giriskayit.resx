<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>